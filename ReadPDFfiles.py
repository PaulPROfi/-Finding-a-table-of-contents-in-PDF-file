import tkinter as tk  # –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏–∞–ª–æ–≥–æ–≤—ã—Ö –æ–∫–æ–Ω
from tkinter import filedialog, messagebox  # –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö
from pdf2image import convert_from_path  # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ PDF –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
import pytesseract  # –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ (OCR)
import os  # —Ä–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
from toc_model import TOCModel #–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à—É ML –º–æ–¥–µ–ª—å
import shutil  # –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ PATH

# =============================================================================
# –ü–û–ò–°–ö –ò –ù–ê–°–¢–†–û–ô–ö–ê –í–ù–ï–®–ù–ò–• –ü–†–û–ì–†–ê–ú–ú
# =============================================================================

def setup_tesseract():
    """
    –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç Tesseract –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä—É—Å—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        bool: True –µ—Å–ª–∏ Tesseract –Ω–∞–π–¥–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, False –µ—Å–ª–∏ –Ω–µ—Ç
    """
    # –ò—â–µ–º tesseract –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π PATH
    tesseract_cmd = shutil.which("tesseract") 
    if tesseract_cmd:
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—É—Ç—å –∫ tesseract –¥–ª—è pytesseract
        pytesseract.pytesseract.tesseract_cmd = tesseract_cmd
        print(f"‚úì Tesseract –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {tesseract_cmd}")
        return True
    else:
        print("‚ùå Tesseract –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Tesseract-OCR –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é PATH")
        return False

def setup_poppler():
    """
    –ù–∞—Ö–æ–¥–∏—Ç –ø—É—Ç—å –∫ Poppler –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ PDF –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        str: –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ bin Poppler –∏–ª–∏ None –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
    """    
    # –ò—â–µ–º pdftoppm –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π PATH
    poppler_cmd = shutil.which("pdftoppm")
    if poppler_cmd:
        # –ü–æ–ª—É—á–∞–µ–º –ø–∞–ø–∫—É, –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è pdftoppm
        poppler_dir = os.path.dirname(poppler_cmd)
        print(f"‚úì Poppler –Ω–∞–π–¥–µ–Ω: {poppler_dir}")
        return poppler_dir
    else:
        print("‚ùå Poppler –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Poppler –∏ –¥–æ–±–∞–≤—å—Ç–µ –ø–∞–ø–∫—É bin –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é PATH")
        return None

# =============================================================================
# –õ–æ–≥–∏–∫–∞ –∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏–∑ PDF
# =============================================================================

def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã - —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä—É—Å—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∏–∑ PDF
    –ü—Ä–æ—Ü–µ—Å—Å:
    1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Tesseract –∏ Poppler
    2. –í—ã–±–æ—Ä PDF —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    3. –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è PDF –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    4. –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
    5. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        bool: True –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, False –µ—Å–ª–∏ –æ—à–∏–±–∫–∞
    """
    try:
        # =====================================================================
        # –ü–†–û–í–ï–†–ö–ê –ù–ï–û–ë–•–û–î–ò–ú–´–• –ü–†–û–ì–†–ê–ú–ú
        # =====================================================================
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Tesseract –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
        if not setup_tesseract():
            messagebox.showerror("–û—à–∏–±–∫–∞", "Tesseract –Ω–µ –Ω–∞–π–¥–µ–Ω!\n\n–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Tesseract-OCR –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ PATH.")
            return False
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Poppler –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ PDF
        poppler_path = setup_poppler()
        if not poppler_path:
            messagebox.showerror("–û—à–∏–±–∫–∞", "Poppler –Ω–µ –Ω–∞–π–¥–µ–Ω!\n\n–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Poppler –∏ –¥–æ–±–∞–≤—å—Ç–µ –ø–∞–ø–∫—É bin –≤ PATH.")
            return False
        
        model = TOCModel()
        
        # =====================================================================
        # –í–´–ë–û–† PDF –§–ê–ô–õ–ê
        # =====================================================================
        # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä—ã—Ç–æ–µ –æ–∫–Ω–æ –¥–ª—è –¥–∏–∞–ª–æ–≥–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
        root = tk.Tk()
        root.withdraw()  # —Å–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ PDF —Ñ–∞–π–ª–∞
        pdf_path = filedialog.askopenfilename(
            title="–í—ã–±–µ—Ä–∏—Ç–µ PDF –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è",
            filetypes=[("PDF —Ñ–∞–π–ª—ã", "*.pdf")]
        )
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ñ–∞–π–ª
        if not pdf_path:
            messagebox.showerror("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ–∞–π–ª–∞", "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–∞–π–ª")
            return False
        print(f"üìÑ –í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª: {os.path.basename(pdf_path)}")
        # =====================================================================
        # –ö–û–ù–í–ï–†–¢–ê–¶–ò–Ø PDF –í –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø
        # =====================================================================
        try:
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º PDF –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–ø–µ—Ä–≤—ã–µ 10 —Å—Ç—Ä–∞–Ω–∏—Ü)
            images = convert_from_path(
                pdf_path,
                dpi=300,  # –≤—ã—Å–æ–∫–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
                first_page=1,
                last_page=10,  # –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º 10 —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
                poppler_path=poppler_path
            )
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å PDF:\n{e}")
            return False        
        # =====================================================================
        # –†–ê–°–ü–û–ó–ù–ê–í–ê–ù–ò–ï –¢–ï–ö–°–¢–ê
        # =====================================================================     
        texts = []  # —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
        results = []
        
        # –ü—Ä–æ—Å—Ç—ã–µ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        tesseract_config = '--oem 3 --psm 6 -l rus+eng'
        
        for i, img in enumerate(images, 1):           
            try:
                # –†–∞—Å–ø–æ–∑–Ω–∞–µ–º —Ç–µ–∫—Å—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                text = pytesseract.image_to_string(
                    img,
                    config=tesseract_config
                )
                
                is_toc, confidence = model.predict(text)
                
                results.append({
                    'page': i,
                    'is_toc': is_toc,
                    'confidence': confidence
                })
                
            except Exception as e:
                texts.append(f"[–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã {i}: {e}]")
        
        show_results(results)
        return results
    
    except Exception as e:
         print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
         messagebox.showerror("–û—à–∏–±–∫–∞", f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:\n{e}")
         return False    

def show_results(results):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –≤ —É–¥–æ–±–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    
    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        results (list): —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä–∞–Ω–∏—Ü
    """  
    toc_pages = []
    
    for result in results:
        status = "–û–≥–ª–∞–≤–ª–µ–Ω–∏–µ" if result['is_toc'] else "–û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç"
        confidence = f"{result['confidence']:.1%}"
        
        print(f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {result['page']}: {status}")
        print(f"   –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence}")
        
        if result['is_toc']:
            toc_pages.append(result['page'])
    
    # –°–≤–æ–¥–∫–∞
    print("\nüìà –°–í–û–î–ö–ê:")
    if toc_pages:
        pages_text = ", ".join(map(str, toc_pages))
        summary = f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ–≥–ª–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {pages_text} —Å —É–≤–µ—Ä–µ–Ω–æ—Å—Ç—å—é {confidence}"
    else:
        summary = "‚ùå –û–≥–ª–∞–≤–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∞ –ø–µ—Ä–≤—ã—Ö 10 —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö"
    
    print(summary)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –¥–∏–∞–ª–æ–≥–æ–≤–æ–º –æ–∫–Ω–µ
    messagebox.showinfo("–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞", summary)



#–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if __name__ == "__main__":
    main()
